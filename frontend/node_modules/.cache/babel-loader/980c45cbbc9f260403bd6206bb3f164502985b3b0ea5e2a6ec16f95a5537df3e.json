{"ast":null,"code":"// src/App.js\nimport React from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import LoginPage from'./pages/auth/LoginPage';import MyPayslipsPage from'./pages/employee/MyPayslipsPage';import AdminDashboardPage from'./pages/admin/DashboardPage';// Simple check for authentication\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const isAuthenticated=()=>!!localStorage.getItem('token');const getUserRole=()=>localStorage.getItem('role');// A route that requires authentication\nconst PrivateRoute=_ref=>{let{children,roleRequired}=_ref;const auth=isAuthenticated();const userRole=getUserRole();if(!auth){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(roleRequired&&userRole!==roleRequired){// Redirect to the appropriate dashboard if role is wrong\nreturn/*#__PURE__*/_jsx(Navigate,{to:userRole==='admin'?'/admin/dashboard':'/employee/dashboard',replace:true});}return children;};const App=()=>{return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/employee/dashboard\",element:/*#__PURE__*/_jsx(PrivateRoute,{roleRequired:\"employee\",children:/*#__PURE__*/_jsx(MyPayslipsPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/dashboard\",element:/*#__PURE__*/_jsx(PrivateRoute,{roleRequired:\"admin\",children:/*#__PURE__*/_jsx(AdminDashboardPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:isAuthenticated()?\"/\".concat(getUserRole(),\"/dashboard\"):'/login',replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})});};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","LoginPage","MyPayslipsPage","AdminDashboardPage","jsx","_jsx","jsxs","_jsxs","isAuthenticated","localStorage","getItem","getUserRole","PrivateRoute","_ref","children","roleRequired","auth","userRole","to","replace","App","path","element","concat"],"sources":["C:/Users/Code_AI/Documents/PAYROL SYSTEM COMPLEX/Apollo PAYROL SYSTEM - backup 3 working backend/kenyan_payroll_system/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport LoginPage from './pages/auth/LoginPage';\r\nimport MyPayslipsPage from './pages/employee/MyPayslipsPage';\r\nimport AdminDashboardPage from './pages/admin/DashboardPage';\r\n\r\n// Simple check for authentication\r\nconst isAuthenticated = () => !!localStorage.getItem('token');\r\nconst getUserRole = () => localStorage.getItem('role');\r\n\r\n// A route that requires authentication\r\nconst PrivateRoute = ({ children, roleRequired }) => {\r\n  const auth = isAuthenticated();\r\n  const userRole = getUserRole();\r\n  \r\n  if (!auth) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (roleRequired && userRole !== roleRequired) {\r\n    // Redirect to the appropriate dashboard if role is wrong\r\n    return <Navigate to={userRole === 'admin' ? '/admin/dashboard' : '/employee/dashboard'} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        \r\n        {/* Employee Protected Routes */}\r\n        <Route\r\n          path=\"/employee/dashboard\"\r\n          element={\r\n            <PrivateRoute roleRequired=\"employee\">\r\n              <MyPayslipsPage />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        \r\n        {/* Admin Protected Routes */}\r\n        <Route\r\n          path=\"/admin/dashboard\"\r\n          element={\r\n            <PrivateRoute roleRequired=\"admin\">\r\n              <AdminDashboardPage />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Redirect to the appropriate dashboard if already logged in */}\r\n        <Route path=\"/\" element={<Navigate to={isAuthenticated() ? `/${getUserRole()}/dashboard` : '/login'} replace />} />\r\n        \r\n        {/* Fallback for unknown routes */}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\n\r\nexport default App;"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAC5D,MAAO,CAAAC,kBAAkB,KAAM,6BAA6B,CAE5D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC7D,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAMF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAEtD;AACA,KAAM,CAAAE,YAAY,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAC9C,KAAM,CAAAG,IAAI,CAAGR,eAAe,CAAC,CAAC,CAC9B,KAAM,CAAAS,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAE9B,GAAI,CAACK,IAAI,CAAE,CACT,mBAAOX,IAAA,CAACL,QAAQ,EAACkB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIJ,YAAY,EAAIE,QAAQ,GAAKF,YAAY,CAAE,CAC7C;AACA,mBAAOV,IAAA,CAACL,QAAQ,EAACkB,EAAE,CAAED,QAAQ,GAAK,OAAO,CAAG,kBAAkB,CAAG,qBAAsB,CAACE,OAAO,MAAE,CAAC,CACpG,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAM,GAAG,CAAGA,CAAA,GAAM,CAChB,mBACEf,IAAA,CAACR,MAAM,EAAAiB,QAAA,cACLP,KAAA,CAACT,MAAM,EAAAgB,QAAA,eACLT,IAAA,CAACN,KAAK,EAACsB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEjB,IAAA,CAACJ,SAAS,GAAE,CAAE,CAAE,CAAC,cAG/CI,IAAA,CAACN,KAAK,EACJsB,IAAI,CAAC,qBAAqB,CAC1BC,OAAO,cACLjB,IAAA,CAACO,YAAY,EAACG,YAAY,CAAC,UAAU,CAAAD,QAAA,cACnCT,IAAA,CAACH,cAAc,GAAE,CAAC,CACN,CACf,CACF,CAAC,cAGFG,IAAA,CAACN,KAAK,EACJsB,IAAI,CAAC,kBAAkB,CACvBC,OAAO,cACLjB,IAAA,CAACO,YAAY,EAACG,YAAY,CAAC,OAAO,CAAAD,QAAA,cAChCT,IAAA,CAACF,kBAAkB,GAAE,CAAC,CACV,CACf,CACF,CAAC,cAGFE,IAAA,CAACN,KAAK,EAACsB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEjB,IAAA,CAACL,QAAQ,EAACkB,EAAE,CAAEV,eAAe,CAAC,CAAC,KAAAe,MAAA,CAAOZ,WAAW,CAAC,CAAC,eAAe,QAAS,CAACQ,OAAO,MAAE,CAAE,CAAE,CAAC,cAGnHd,IAAA,CAACN,KAAK,EAACsB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEjB,IAAA,CAACL,QAAQ,EAACkB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAE,CAAE,CAAC,EAClD,CAAC,CACH,CAAC,CAEb,CAAC,CAGD,cAAe,CAAAC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}