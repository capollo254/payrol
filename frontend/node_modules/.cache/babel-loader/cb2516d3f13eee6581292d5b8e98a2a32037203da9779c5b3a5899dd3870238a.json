{"ast":null,"code":"// src/api/auth.js\n\nimport axios from 'axios';\n\n// The base URL for your Django backend\nconst API_URL = 'http://127.0.0.1:8000/api/v1/';\n\n// Create an Axios instance with the base URL\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n/**\r\n * Handles the user login process.\r\n * Sends a POST request to the backend with the user's email and password.\r\n * @param {string} email - The user's email address.\r\n * @param {string} password - The user's password.\r\n * @returns {Promise<object>} The response data from the backend (e.g., auth token).\r\n */\nexport const login = async (emailxx, password) => {\n  const response = await api.post('auth/login/', {\n    email,\n    password\n  });\n\n  // After a successful login, set the default Authorization header for all future requests\n  if (response.data.token) {\n    axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n  }\n  return response.data;\n};\n\n/**\r\n * Logs the user out by clearing the token and role from local storage.\r\n * This function also removes the Authorization header.\r\n */\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('role');\n  delete axios.defaults.headers.common['Authorization'];\n  window.location.href = '/login';\n};\n\n// Check for a token on application load and set the header\nconst token = localStorage.getItem('token');\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Token ${token}`;\n}\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","login","emailxx","password","response","post","email","data","token","defaults","headers","common","logout","localStorage","removeItem","window","location","href","getItem"],"sources":["C:/Users/Code_AI/Documents/PAYROL SYSTEM COMPLEX/KE PAYROL SYSTEM/kenyan_payroll_system/frontend/src/api/auth.js"],"sourcesContent":["// src/api/auth.js\r\n\r\nimport axios from 'axios';\r\n\r\n// The base URL for your Django backend\r\nconst API_URL = 'http://127.0.0.1:8000/api/v1/';\r\n\r\n// Create an Axios instance with the base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n/**\r\n * Handles the user login process.\r\n * Sends a POST request to the backend with the user's email and password.\r\n * @param {string} email - The user's email address.\r\n * @param {string} password - The user's password.\r\n * @returns {Promise<object>} The response data from the backend (e.g., auth token).\r\n */\r\nexport const login = async (emailxx, password) => {\r\n  const response = await api.post('auth/login/', { email, password });\r\n  \r\n  // After a successful login, set the default Authorization header for all future requests\r\n  if (response.data.token) {\r\n    axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\r\n  }\r\n  \r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Logs the user out by clearing the token and role from local storage.\r\n * This function also removes the Authorization header.\r\n */\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('role');\r\n  delete axios.defaults.headers.common['Authorization'];\r\n  window.location.href = '/login';\r\n};\r\n\r\n// Check for a token on application load and set the header\r\nconst token = localStorage.getItem('token');\r\nif (token) {\r\n  axios.defaults.headers.common['Authorization'] = `Token ${token}`;\r\n}\r\n\r\nexport default api;"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,+BAA+B;;AAE/C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,KAAK;EAChD,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;IAAEC,KAAK;IAAEH;EAAS,CAAC,CAAC;;EAEnE;EACA,IAAIC,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;IACvBZ,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAASP,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;EACjF;EAEA,OAAOJ,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM;EAC1BC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EAC/B,OAAOlB,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACrDI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC;;AAED;AACA,MAAMT,KAAK,GAAGK,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;AAC3C,IAAIV,KAAK,EAAE;EACTZ,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAASH,KAAK,EAAE;AACnE;AAEA,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}