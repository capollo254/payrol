{"ast":null,"code":"// api/deductions.js\n\n// The base URL for your Django backend\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/v1';\n\n// Get token from localStorage\nconst getToken = () => localStorage.getItem('token');\n\n// Voluntary Deductions API\nexport const getVoluntaryDeductions = async (employeeId = null) => {\n  try {\n    const token = getToken();\n    const url = employeeId ? `${API_BASE_URL}/employees/voluntary-deductions/?employee=${employeeId}` : `${API_BASE_URL}/employees/voluntary-deductions/`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching voluntary deductions:', error);\n    throw error;\n  }\n};\nexport const createVoluntaryDeduction = async deductionData => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_BASE_URL}/employees/voluntary-deductions/`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(deductionData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating voluntary deduction:', error);\n    throw error;\n  }\n};\nexport const updateVoluntaryDeduction = async (deductionId, deductionData) => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_BASE_URL}/employees/voluntary-deductions/${deductionId}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(deductionData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error updating voluntary deduction:', error);\n    throw error;\n  }\n};\nexport const deleteVoluntaryDeduction = async deductionId => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_BASE_URL}/employees/voluntary-deductions/${deductionId}/`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n    return true;\n  } catch (error) {\n    console.error('Error deleting voluntary deduction:', error);\n    throw error;\n  }\n};\n\n// Employee Benefits API\nexport const getEmployeeBenefits = async (employeeId = null) => {\n  try {\n    const token = getToken();\n    const url = employeeId ? `${API_BASE_URL}/employees/benefits/?employee=${employeeId}` : `${API_BASE_URL}/employees/benefits/`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching employee benefits:', error);\n    throw error;\n  }\n};\nexport const createEmployeeBenefit = async benefitData => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_BASE_URL}/employees/benefits/`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(benefitData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating employee benefit:', error);\n    throw error;\n  }\n};\nexport const updateEmployeeBenefit = async (benefitId, benefitData) => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_BASE_URL}/employees/benefits/${benefitId}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(benefitData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error updating employee benefit:', error);\n    throw error;\n  }\n};\nexport const deleteEmployeeBenefit = async benefitId => {\n  try {\n    const token = getToken();\n    const response = await fetch(`${API_BASE_URL}/employees/benefits/${benefitId}/`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n    return true;\n  } catch (error) {\n    console.error('Error deleting employee benefit:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getToken","localStorage","getItem","getVoluntaryDeductions","employeeId","token","url","response","fetch","headers","ok","Error","status","json","error","console","createVoluntaryDeduction","deductionData","method","body","JSON","stringify","errorData","detail","updateVoluntaryDeduction","deductionId","deleteVoluntaryDeduction","getEmployeeBenefits","createEmployeeBenefit","benefitData","updateEmployeeBenefit","benefitId","deleteEmployeeBenefit"],"sources":["C:/Users/Code_AI/Documents/PAYROL SYSTEM COMPLEX/KE PAYROL SYSTEM/kenyan_payroll_system/frontend/src/api/deductions.js"],"sourcesContent":["// api/deductions.js\r\n\r\n// The base URL for your Django backend\r\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/v1';\r\n\r\n// Get token from localStorage\r\nconst getToken = () => localStorage.getItem('token');\r\n\r\n// Voluntary Deductions API\r\nexport const getVoluntaryDeductions = async (employeeId = null) => {\r\n  try {\r\n    const token = getToken();\r\n    const url = employeeId \r\n      ? `${API_BASE_URL}/employees/voluntary-deductions/?employee=${employeeId}`\r\n      : `${API_BASE_URL}/employees/voluntary-deductions/`;\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching voluntary deductions:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createVoluntaryDeduction = async (deductionData) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/employees/voluntary-deductions/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(deductionData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating voluntary deduction:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateVoluntaryDeduction = async (deductionId, deductionData) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/employees/voluntary-deductions/${deductionId}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(deductionData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error updating voluntary deduction:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteVoluntaryDeduction = async (deductionId) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/employees/voluntary-deductions/${deductionId}/`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error deleting voluntary deduction:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Employee Benefits API\r\nexport const getEmployeeBenefits = async (employeeId = null) => {\r\n  try {\r\n    const token = getToken();\r\n    const url = employeeId \r\n      ? `${API_BASE_URL}/employees/benefits/?employee=${employeeId}`\r\n      : `${API_BASE_URL}/employees/benefits/`;\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching employee benefits:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEmployeeBenefit = async (benefitData) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/employees/benefits/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(benefitData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating employee benefit:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateEmployeeBenefit = async (benefitId, benefitData) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/employees/benefits/${benefitId}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(benefitData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error updating employee benefit:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteEmployeeBenefit = async (benefitId) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/employees/benefits/${benefitId}/`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error deleting employee benefit:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}