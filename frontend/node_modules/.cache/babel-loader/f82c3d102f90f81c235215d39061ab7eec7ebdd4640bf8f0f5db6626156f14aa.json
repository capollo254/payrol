{"ast":null,"code":"// src/api/auth.js\n\nimport axios from 'axios';\n\n// The base URL for your Django backend\nconst API_URL = 'http://127.0.0.1:8000/api/v1/';\n\n// Create an Axios instance with the base URL\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n/**\r\n * Logs in a user by sending credentials to the backend.\r\n * Upon success, stores the token and role in localStorage and sets the Authorization header.\r\n * @param {string} email - The user's email address.\r\n * @param {string} password - The user's password.\r\n * @returns {Promise<object>} The response data from the backend, including token and role.\r\n */\nexport const login = async (email, password) => {\n  const response = await api.post('auth/login/', {\n    email,\n    password\n  });\n\n  // Store the token and role from the response\n  localStorage.setItem('token', response.data.token);\n  localStorage.setItem('role', response.data.role);\n\n  // Set the default Authorization header for all future requests\n  axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n  return response.data;\n};\n\n/**\r\n * Logs the user out by clearing the token and role from local storage and removing the Authorization header.\r\n */\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('role');\n  delete axios.defaults.headers.common['Authorization'];\n  window.location.href = '/login';\n};\n\n// Immediately set the Authorization header on app load if a token exists in localStorage\nconst token = localStorage.getItem('token');\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Token ${token}`;\n}\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","login","email","password","response","post","localStorage","setItem","data","token","role","defaults","headers","common","logout","removeItem","window","location","href","getItem"],"sources":["C:/Users/Code_AI/Documents/PAYROL SYSTEM COMPLEX/KE PAYROL SYSTEM/kenyan_payroll_system/frontend/src/api/auth.js"],"sourcesContent":["// src/api/auth.js\r\n\r\nimport axios from 'axios';\r\n\r\n// The base URL for your Django backend\r\nconst API_URL = 'http://127.0.0.1:8000/api/v1/';\r\n\r\n// Create an Axios instance with the base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n/**\r\n * Logs in a user by sending credentials to the backend.\r\n * Upon success, stores the token and role in localStorage and sets the Authorization header.\r\n * @param {string} email - The user's email address.\r\n * @param {string} password - The user's password.\r\n * @returns {Promise<object>} The response data from the backend, including token and role.\r\n */\r\nexport const login = async (email, password) => {\r\n  const response = await api.post('auth/login/', { email, password });\r\n  \r\n  // Store the token and role from the response\r\n  localStorage.setItem('token', response.data.token);\r\n  localStorage.setItem('role', response.data.role);\r\n\r\n  // Set the default Authorization header for all future requests\r\n  axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\r\n  \r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Logs the user out by clearing the token and role from local storage and removing the Authorization header.\r\n */\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('role');\r\n  delete axios.defaults.headers.common['Authorization'];\r\n  window.location.href = '/login';\r\n};\r\n\r\n// Immediately set the Authorization header on app load if a token exists in localStorage\r\nconst token = localStorage.getItem('token');\r\nif (token) {\r\n  axios.defaults.headers.common['Authorization'] = `Token ${token}`;\r\n}\r\n\r\nexport default api;"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,+BAA+B;;AAE/C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;;EAEnE;EACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;EAClDH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,QAAQ,CAACI,IAAI,CAACE,IAAI,CAAC;;EAEhD;EACAd,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAST,QAAQ,CAACI,IAAI,CAACC,KAAK,EAAE;EAE/E,OAAOL,QAAQ,CAACI,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMM,MAAM,GAAGA,CAAA,KAAM;EAC1BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;EAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EAC/B,OAAOnB,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACrDG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC;;AAED;AACA,MAAMT,KAAK,GAAGH,YAAY,CAACa,OAAO,CAAC,OAAO,CAAC;AAC3C,IAAIV,KAAK,EAAE;EACTb,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAASJ,KAAK,EAAE;AACnE;AAEA,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}